B. Разместить объявление (20 баллов)
Вы успешно выбрались из лабиринта и оказались в деревне. Так как же найти Алхимика? Идете дальше, чтобы осмотреться, и замечаете метровую доску со столбцами. А на ней всего три объявления, нелепо растянутые слева направо по всей поверхности: «Волшебник ищет помощника», «Информация по золотым монетам» и «Съедобные лягушки оптом».

А что если тоже разместить объявление, которое поможет найти Алхимика? Вы уже занесли руку, чтобы прикрепить свой листок, но внезапно к вам подходит местный житель. Он раздраженно отталкивает вас: «Стой, ты что, не видишь? Для твоего объявления места нет».

Вы пытаетесь доказать жителю, что он заблуждается: «Вы не правы. Можно легко оптимизировать и разместить все объявления. А вообще, попробуйте доски Kanban, мы на работе только ими и пользуемся». «Повесить объявление на кабана? Ты издеваешься? А ну пойдем к Старейшине!» — ворчит мужичок и тащит вас к главе деревни. В древнем святилище вас встречает Старейшина. «Покажи нам, как исправить эту ситуацию», — разрешает седовласый старец.

Итак, ваша новая задача — разработать инструкцию, как правильно вместить все объявления в столбцы, и не забыть оставить свое.

Формат ввода
В функцию renderWaterfall, которую нужно написать, передаётся три параметра:

rootNode: элемент в котором находятся объявления (HTMLDivElement) columnCount: количество колонок (number) elementGap: расстояние между колонками, а также элементами по-вертикали (number)

Пример rootNode:

<div class="root">
  <div class="el">У каждого объявления есть свои стили</div>
  <div class="el">Их не нужно менять</div>
  <div class="el">Каждое объявление должно быть свободным по высоте</div>
  <div class="el">А вот ширину нужно будет выставить</div>
  <div class="el">Ширину элемента root, при необходимости вы можете определить, но в тестах она может быть разная</div>
</div>
Формат вывода
Напишите свою js функцию с именем renderWaterfall. Она будет вставлена на html страницу и вызвана с нужными параметрами. Влияйте на DOM так, чтобы объявления расположились в указанное количество колонок, между ними было расстояние elementGap. Правило расположение элемента в колонку следующее: нужно помещать элемент в ту колонку, высота которой меньше всего. При равных наименьших высотах выбирается самая левая колонка среди них.

Например:

function renderWaterfall(rootNode, columnCount, elementGap) {
...
}
Примечания
Не удаляйте существующие классы элементов. Вы можете изменять ширину объявлений, но высота должна быть зависимой от контента. Можно добавлять свои дополнительные элементы для структурирования.

Посмотрите пример ожидаемого расположения элементов.

Скачать условие задачи